## PREFERENCES
# Valid values are "player1" (default) and "player2"
autogen_team = player2
# disabling symmetry detection allows various optimizations, such as:
# the bitstring sorting optimization and the apply optimization
symmetry_detection = true
# naive generation makes the FFT with a rule for each state-move pair in deterministic solution and then minimizes
naive_generation = true

## MINIMIZING
minimize = true
minimize_preconditions = true
minimize_rule_by_rule = true
# todo - remove this configurable when we can guarantee that it is bug-free
remove_dead_rules = true
use_minimize_opt = false

## LIFTING
use_lifting = false
# Seems to produce bad results (todo - benchmark)
lift_before_simplify = false
# seems to never produce valid liftings
lift_when_minimizing = true

## OPTIMIZATION (For better or worse)
greedy_autogen = true
# speed up fetching states from rule
use_bitstring_sorting_opt = false
use_inverted_list_nodes_opt = false
# speed up fetching rule from state
use_inverted_list_rules_opt = false
use_apply_opt = true

single_thread = true
# disabling rule ordering increases performance marginally since we can use a hashmap instead of treemap
# Valid values are "terminal_first", "terminal_last", "fewest_precons_first", "fewest_precons_last"
use_rule_ordering = false
rule_ordering = terminal_first
# decides whether we simplify a rule in iterations until no more valid simplifications can be done
simplify_iteratively = false

## DEBUGGING AND TESTING
# 1) "detailedDebug" results in a lot more debug messages to the console when synthesizing the rules
detailedDebug = true
# use a debug file if the output size exceeds the IDE sysout buffer
use_debug_file = false
debug_filename = debug.txt
# save the FFT to disk after autogenerating
save_fft = false
# benchmark
benchmark_mode = false
no_of_benchmarks = 10
random_seed = false
seed = 2

## VISUAL SETTINGS
enable_ggp = false
enable_ggp_parser = false
show_rule_groups = false