# Guide to global configurations!
# 1) "enable_autogen" should be set to "true" if you want to autogenerate an FFT on program startup

# 2) "autogen_perspective" chooses the player to autogenerate the winning strategy for
#    Accepted values are "player1", "player2" and "both"

# 3) "greedy_autogen" decides the method for autogenerating the winning strategy
#    Set it to "false" for a better result that takes longer

# 4) "enable_ggp" decides whether General Game Playing data structures should be used after loading in existing
#    strategies. It does NOT decide whether to generate strategies using GGP or not

# 5) "enable_ggp_parser" decides whether a General Game Playing parser (which follows the GGP conventions)
#    should be used when saving and loading the FFT
#    You may want to autogenerate without using the GGP data structures but still save it in the GGP format

# 6) "random_rule_ordering" decides whether the ordering of generated rules in the FFT should be randomized
#    By default the ordering is based on the depth of the states, i.e. states close to terminal states in the
#    search tree is prioritized

# 7) "minimize_preconditions" decides whether the preconditions within rules should be minimized when minimizing the FFT
#    The main reason for setting to false would be for debugging purposes

# 8) "symmetry_detection" decides whether symmetric states should be explored when checking if the rule applies

# 9) "generate_all_rules" decides if a full rule for every state should be generated first, followed by a minimize after

# 10) "save_intermediate_strategy" is an optimization flag that decides if a hashmap should be used to save the
#     state-move mappings the strategy decides. It is used to prevent having to check through all rules

# Valid values are "player1" (default), "player2" and "both"
autogen_perspective = player1
minimize_preconditions = true
symmetry_detection = true

greedy_autogen = true
generate_all_rules = false
minimize_rule_by_rule = true
minimize_bottoms_up = false
# optimization only
save_intermediate_strategy = true
# Valid values are "random" (default), "terminal_first", "terminal_last", "fewest_precons_first", "fewest_precons_last"
rule_ordering = terminal_first

random_seed = true
seed = 0
# Below two properties are automatically set to true when executing the GGP program
# Generally, don't be concerned about these two properties, they rarely need to be altered
enable_ggp = false
enable_ggp_parser = true

# For debugging and testing
# 1) "detailedDebug" results in a lot more debug messages to the console when synthesizing the rules
# 2) "verify_single_strategy" tries a different approach for generating the strategy.
detailedDebug = false
single_thread = false
use_filtering = true
verify_single_strategy = false

# GUI
show_rule_groups = false